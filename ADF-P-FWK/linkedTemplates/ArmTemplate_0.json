{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-P-FWK"
		},
		"FrameworkFunctions_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'FrameworkFunctions'"
		},
		"starrezhousingAPI_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'starrezhousingAPI'"
		},
		"FrameworkFunctions_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://afa-p-fwk.azurewebsites.net"
		},
		"Keys_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://KV-P-FWK.vault.azure.net/"
		},
		"starrezhousingAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://scapeau.starrezhousing.com/StarRezREST/services"
		},
		"starrezhousingAPI_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "cristiane.diniz@scape.com"
		},
		"BlobStorage_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "kv-saprod"
		},
		"SupportDatabase_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "kv-dasqlprod"
		},
		"adldaprod_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adldaprod.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FrameworkFunctions')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Interact with the Azure Functions App used as middle ware when making requests to Worker pipelines. Authentication done at the Function App level.",
				"annotations": [
					"procfwk"
				],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('FrameworkFunctions_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('FrameworkFunctions_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Keys')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to Key Vault for all other ADF linked service credentials required to run the processing framework.",
				"annotations": [
					"procfwk"
				],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Keys_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/starrezhousingAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('starrezhousingAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('starrezhousingAPI_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('starrezhousingAPI_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Email Sender')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Provide a simple abstract over the send email function with request body item exposed as pipeline parameters.",
				"activities": [
					{
						"name": "Send Email",
						"description": "Use an Azure Function to perform an SMTP client email send operation.",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "SendEmail",
							"method": "POST",
							"headers": {
								"x-functions-key": "36lmNL6LBkmUrvHUZcpDvQKjaelckGJ1Etppmjs1WvYADpAtdimAJA=="
							},
							"body": {
								"value": "{\n\"emailRecipients\": \"@{pipeline().parameters.Recipients}\",\n\"emailCcRecipients\": \"@{pipeline().parameters.CcRecipients}\",\n\"emailBccRecipients\": \"@{pipeline().parameters.BccRecipients}\",\n\"emailSubject\": \"@{pipeline().parameters.Subject}\",\n\"emailBody\": \"@{pipeline().parameters.Body}\",\n\"emailImportance\": \"@{pipeline().parameters.Importance}\"\n}",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "FrameworkFunctions",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Recipients": {
						"type": "string"
					},
					"CcRecipients": {
						"type": "string"
					},
					"BccRecipients": {
						"type": "string"
					},
					"Subject": {
						"type": "string"
					},
					"Body": {
						"type": "string"
					},
					"Importance": {
						"type": "string"
					}
				},
				"folder": {
					"name": "_ProcFwk/_ProcFwkUtils"
				},
				"annotations": [
					"procfwk",
					"Utils"
				],
				"lastPublishTime": "2021-12-28T23:57:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FrameworkFunctions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StarRez')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "starrezhousingAPI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"url": {
						"type": "string"
					},
					"parameter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('https://scapeau.starrezhousing.com/StarRezREST/services',dataset().url,dataset().parameter)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/starrezhousingAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Keys",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('BlobStorage_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Keys')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SupportDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection between ADF and processing framework metadata SQLDB.",
				"annotations": [
					"procfwk"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Keys",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('SupportDatabase_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Keys')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adldaprod')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adldaprod_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Keys",
							"type": "LinkedServiceReference"
						},
						"secretName": "kv-adldaprod"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Keys')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLCurrent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adldaprod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "current"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adldaprod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLCurrent_Directory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adldaprod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string",
						"defaultValue": "entry"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "current"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adldaprod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adldaprod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Object": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Object",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"encodingName": "US-ASCII"
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adldaprod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLStructured')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adldaprod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "structured"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adldaprod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLStructured_Directory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adldaprod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string",
						"defaultValue": "entry"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "structured"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adldaprod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SupportDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ETLId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Object",
						"type": "nvarchar"
					},
					{
						"name": "SourceLocation",
						"type": "nvarchar"
					},
					{
						"name": "SourceBaseUrl",
						"type": "nvarchar"
					},
					{
						"name": "SourceRequestType",
						"type": "nvarchar"
					},
					{
						"name": "SourceUrl",
						"type": "nvarchar"
					},
					{
						"name": "SourceParameter",
						"type": "nvarchar"
					},
					{
						"name": "SinkLocation",
						"type": "nvarchar"
					},
					{
						"name": "SinkFileFormat",
						"type": "nvarchar"
					},
					{
						"name": "SinkFileName",
						"type": "nvarchar"
					},
					{
						"name": "SinkFilePath",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CurrentETL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SupportDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetSetMetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Single generic dataset used to get and set all database metadata.",
				"linkedServiceName": {
					"referenceName": "SupportDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "_ProcFwk"
				},
				"annotations": [
					"procfwk"
				],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SupportDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adldaprod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File": {
						"type": "string",
						"defaultValue": "entry/2022/01/05"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"encodingName": "US-ASCII"
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adldaprod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceSystemMetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SupportDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SourceSystemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "ColumnName",
						"type": "nvarchar"
					},
					{
						"name": "DataType",
						"type": "nvarchar"
					},
					{
						"name": "IsRequired",
						"type": "bit"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SourceSystemMetadata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SupportDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLCurrent_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adldaprod",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"File": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": "current"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adldaprod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyApiToRaw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy API to Raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "StarRez",
								"type": "DatasetReference",
								"parameters": {
									"url": {
										"value": "@pipeline().parameters.url",
										"type": "Expression"
									},
									"parameter": {
										"value": "@pipeline().parameters.parameter",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Raw",
								"type": "DatasetReference",
								"parameters": {
									"File": {
										"value": "@pipeline().parameters.file",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.directory",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"url": {
						"type": "string"
					},
					"parameter": {
						"type": "string"
					},
					"file": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StarRez')]",
				"[concat(variables('factoryId'), '/datasets/Raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyRawToStructured')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Raw File Created",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Raw",
								"type": "DatasetReference",
								"parameters": {
									"File": {
										"value": "@pipeline().parameters.RawFile",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.RawDiretory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Raw File Created",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('Raw File Created').output.exists)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Raw To Structured",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetColumnMapping",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@json(activity('GetColumnMapping').output.firstRow.json_output)",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "Raw",
											"type": "DatasetReference",
											"parameters": {
												"File": {
													"value": "@pipeline().parameters.RawFile",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.RawDiretory",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLStructured",
											"type": "DatasetReference",
											"parameters": {
												"File": {
													"value": "@pipeline().parameters.StructuredFile",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.StructuredDirectory",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GetColumnMapping",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Raw UpdateCurrentExecutionLog",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[sp_getColumnMapping]",
											"storedProcedureParameters": {
												"table_name": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.RawDiretory",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "GetSetMetadata",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Raw UpdateCurrentExecutionLog",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[procfwk].[SetLogPipelineFilePathName]",
										"storedProcedureParameters": {
											"ADLContainer": {
												"value": "R",
												"type": "String"
											},
											"ExecutionId": {
												"value": {
													"value": "@pipeline().parameters.executionId",
													"type": "Expression"
												},
												"type": "Guid"
											},
											"FilePath": {
												"value": {
													"value": "@pipeline().parameters.RawFile",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineId": {
												"value": {
													"value": "@pipeline().parameters.PipelineId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StageId": {
												"value": {
													"value": "@pipeline().parameters.StageId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SupportDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"RawFile": {
						"type": "string"
					},
					"RawDiretory": {
						"type": "string"
					},
					"StructuredFile": {
						"type": "string"
					},
					"StructuredDirectory": {
						"type": "string"
					},
					"ExecutionId": {
						"type": "string"
					},
					"PipelineId": {
						"type": "string"
					},
					"StageId": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Raw')]",
				"[concat(variables('factoryId'), '/datasets/ADLStructured')]",
				"[concat(variables('factoryId'), '/datasets/GetSetMetadata')]",
				"[concat(variables('factoryId'), '/linkedServices/SupportDatabase')]"
			]
		}
	]
}