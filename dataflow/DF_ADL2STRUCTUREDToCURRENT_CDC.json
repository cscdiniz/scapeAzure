{
	"name": "DF_ADL2STRUCTUREDToCURRENT_CDC",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADLStructured",
						"type": "DatasetReference"
					},
					"name": "StructuredFile"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalytics",
						"type": "DatasetReference"
					},
					"name": "CurrentLookup"
				},
				{
					"dataset": {
						"referenceName": "GetSetMetadata",
						"type": "DatasetReference"
					},
					"name": "HASH"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalytics",
						"type": "DatasetReference"
					},
					"name": "CurrentSink"
				},
				{
					"name": "hashcache"
				}
			],
			"transformations": [
				{
					"name": "AddColumns"
				},
				{
					"name": "Select1"
				}
			],
			"script": "parameters{\n\tFile as string ('2022/01/24/Booking_1EA46AB0-E930-4D0A-891C-BD7D15E9F6B1.parquet'),\n\tDirectory as string ('Booking'),\n\tExecutionDate as timestamp,\n\tRunId as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\trowUrlColumn: 'FileName',\n\tformat: 'parquet') ~> StructuredFile\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'FileName',\n\tpartitionRootPath: ($Directory),\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: (concat(\"Select * From stg.\", $Directory)),\n\tformat: 'query',\n\tstaged: true,\n\twildcardPaths:[(concat($Directory, '/*/*/*/*.parquet'))]) ~> CurrentLookup\nsource(output(\n\t\thash as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tinputs:['@TableName' -> ($Directory),'hash' -> ''],\n\tprocedureName: 'ReturnHASHMD5',\n\tschemaName: 'procfwkHelpers',\n\tresultSet: true,\n\tformat: 'procedure') ~> HASH\nStructuredFile derive(HASH = hashcache#outputs()[1].hash,\n\t\tExecutionStatus = 'INSERT',\n\t\tExecutionCreatedDate = $ExecutionDate,\n\t\tExecutionModifiedDate = $ExecutionDate,\n\t\tExecutionLogId = $RunId) ~> AddColumns\nCurrentLookup select(mapColumn(\n\t\tFileName,\n\t\teach(match(locate('hash',lower(name))==1),\n\t\t\t'HASH' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nAddColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tpreCommands: [],\n\tpostCommands: []) ~> CurrentSink\nHASH sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: true,\n\tsaveOrder: 1) ~> hashcache"
		}
	}
}